#include <cstdint>
#include <iostream>

int main() {
    uint16_t N, K, M;
    std::cin >> N >> K >> M;
    uint16_t count = 0;
    if (M > K) { // проверяем, хватает ли 1 заготовки хотя бы на 1 деталь (иначе детали невозможно делать)
        std::cout << count << std::endl;
        return 0;        
    }
    while (N >= K) { // пока материала хватает хотя бы на 1 заготовку
        uint16_t count_k_in_n = N / K; // на сколько заготовок хватит материала
        N -= K * count_k_in_n; // используем материал для изготовления заготовок
        uint16_t count_m_in_k = K / M; // на сколько деталей хватает одной заготовки
        uint16_t details_count = count_m_in_k * count_k_in_n; // кол-во деталей из всех заготовок
        count += details_count;
        uint16_t one_left = K - count_m_in_k * M; // сколько остаётся от каждой заготовки после изготовления деталей
        uint16_t all_left = one_left * count_k_in_n; // общая масса остатков материала от всех заготовок
        // если бы мы до цикла не сделали проверку, а M оказался бы больше K, то мы бы прибавляли
        // полный вес заготовок, соответственно, после каждой итерации значение N было бы одинаковым (бесконечный цикл)
        N += all_left;
    }
    std::cout << count << std::endl;
    return 0;
}
